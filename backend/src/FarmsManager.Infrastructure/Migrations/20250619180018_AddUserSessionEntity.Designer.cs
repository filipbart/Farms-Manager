// <auto-generated />
using System;
using FarmsManager.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FarmsManager.Infrastructure.Migrations
{
    [DbContext(typeof(FarmsManagerContext))]
    [Migration("20250619180018_AddUserSessionEntity")]
    partial class AddUserSessionEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("farms_manager")
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FarmsManager.Domain.Aggregates.UserAggregate.Entites.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("DateCreatedUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_created_utc");

                    b.Property<DateTime?>("DateDeletedUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_deleted_utc");

                    b.Property<DateTime?>("DateModifiedUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_modified_utc");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("deleted_by");

                    b.Property<string>("Login")
                        .HasColumnType("text")
                        .HasColumnName("login");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text")
                        .HasColumnName("password_hash");

                    b.HasKey("Id")
                        .HasName("pk_user");

                    b.ToTable("user", "farms_manager");
                });

            modelBuilder.Entity("FarmsManager.Domain.Aggregates.UserAggregate.Entites.UserSessionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("DateCreatedUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_created_utc");

                    b.Property<DateTime?>("DateDeletedUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_deleted_utc");

                    b.Property<DateTime?>("DateModifiedUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_modified_utc");

                    b.Property<DateTime?>("DeactivatedAtUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deactivated_at_utc");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("deleted_by");

                    b.Property<DateTime>("LastSeenAtUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_seen_at_utc");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.Property<Guid>("SessionId")
                        .HasColumnType("uuid")
                        .HasColumnName("session_id");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_user_session");

                    b.HasIndex("SessionId")
                        .IsUnique()
                        .HasDatabaseName("ix_user_session_session_id");

                    b.ToTable("user_session", "farms_manager");
                });
#pragma warning restore 612, 618
        }
    }
}
